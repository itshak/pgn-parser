{
  "version": 3,
  "sources": ["../../../../node_modules/chessops/src/types.ts", "../../../../node_modules/chessops/src/util.ts"],
  "sourcesContent": ["export const FILE_NAMES = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'] as const;\n\nexport type FileName = (typeof FILE_NAMES)[number];\n\nexport const RANK_NAMES = ['1', '2', '3', '4', '5', '6', '7', '8'] as const;\n\nexport type RankName = (typeof RANK_NAMES)[number];\n\nexport type Square = number;\n\nexport type SquareName = `${FileName}${RankName}`;\n\n/**\n * Indexable by square indices.\n */\nexport type BySquare<T> = T[];\n\nexport const COLORS = ['white', 'black'] as const;\n\nexport type Color = (typeof COLORS)[number];\n\n/**\n * Indexable by `white` and `black`.\n */\nexport type ByColor<T> = {\n  [color in Color]: T;\n};\n\nexport const ROLES = ['pawn', 'knight', 'bishop', 'rook', 'queen', 'king'] as const;\n\nexport type Role = (typeof ROLES)[number];\n\n/**\n * Indexable by `pawn`, `knight`, `bishop`, `rook`, `queen`, and `king`.\n */\nexport type ByRole<T> = {\n  [role in Role]: T;\n};\n\nexport const CASTLING_SIDES = ['a', 'h'] as const;\n\nexport type CastlingSide = (typeof CASTLING_SIDES)[number];\n\n/**\n * Indexable by `a` and `h`.\n */\nexport type ByCastlingSide<T> = {\n  [side in CastlingSide]: T;\n};\n\nexport interface Piece {\n  role: Role;\n  color: Color;\n  promoted?: boolean;\n}\n\nexport interface NormalMove {\n  from: Square;\n  to: Square;\n  promotion?: Role;\n}\n\nexport interface DropMove {\n  role: Role;\n  to: Square;\n}\n\nexport type Move = NormalMove | DropMove;\n\nexport const isDrop = (v: Move): v is DropMove => 'role' in v;\n\nexport const isNormal = (v: Move): v is NormalMove => 'from' in v;\n\nexport const RULES = [\n  'chess',\n  'antichess',\n  'kingofthehill',\n  '3check',\n  'atomic',\n  'horde',\n  'racingkings',\n  'crazyhouse',\n] as const;\n\nexport type Rules = (typeof RULES)[number];\n\nexport interface Outcome {\n  winner: Color | undefined;\n}\n", "import {\n  CastlingSide,\n  Color,\n  FILE_NAMES,\n  isDrop,\n  isNormal,\n  Move,\n  RANK_NAMES,\n  Role,\n  Square,\n  SquareName,\n} from './types.js';\n\nexport const defined = <A>(v: A | undefined): v is A => v !== undefined;\n\nexport const opposite = (color: Color): Color => (color === 'white' ? 'black' : 'white');\n\nexport const squareRank = (square: Square): number => square >> 3;\n\nexport const squareFile = (square: Square): number => square & 0x7;\n\nexport const squareFromCoords = (file: number, rank: number): Square | undefined =>\n  0 <= file && file < 8 && 0 <= rank && rank < 8 ? file + 8 * rank : undefined;\n\nexport const roleToChar = (role: Role): string => {\n  switch (role) {\n    case 'pawn':\n      return 'p';\n    case 'knight':\n      return 'n';\n    case 'bishop':\n      return 'b';\n    case 'rook':\n      return 'r';\n    case 'queen':\n      return 'q';\n    case 'king':\n      return 'k';\n  }\n};\n\nexport function charToRole(ch: 'p' | 'n' | 'b' | 'r' | 'q' | 'k' | 'P' | 'N' | 'B' | 'R' | 'Q' | 'K'): Role;\nexport function charToRole(ch: string): Role | undefined;\nexport function charToRole(ch: string): Role | undefined {\n  switch (ch.toLowerCase()) {\n    case 'p':\n      return 'pawn';\n    case 'n':\n      return 'knight';\n    case 'b':\n      return 'bishop';\n    case 'r':\n      return 'rook';\n    case 'q':\n      return 'queen';\n    case 'k':\n      return 'king';\n    default:\n      return;\n  }\n}\n\nexport function parseSquare(str: SquareName): Square;\nexport function parseSquare(str: string): Square | undefined;\nexport function parseSquare(str: string): Square | undefined {\n  if (str.length !== 2) return;\n  return squareFromCoords(str.charCodeAt(0) - 'a'.charCodeAt(0), str.charCodeAt(1) - '1'.charCodeAt(0));\n}\n\nexport const makeSquare = (square: Square): SquareName =>\n  (FILE_NAMES[squareFile(square)] + RANK_NAMES[squareRank(square)]) as SquareName;\n\nexport const parseUci = (str: string): Move | undefined => {\n  if (str[1] === '@' && str.length === 4) {\n    const role = charToRole(str[0]);\n    const to = parseSquare(str.slice(2));\n    if (role && defined(to)) return { role, to };\n  } else if (str.length === 4 || str.length === 5) {\n    const from = parseSquare(str.slice(0, 2));\n    const to = parseSquare(str.slice(2, 4));\n    let promotion: Role | undefined;\n    if (str.length === 5) {\n      promotion = charToRole(str[4]);\n      if (!promotion) return;\n    }\n    if (defined(from) && defined(to)) return { from, to, promotion };\n  }\n  return;\n};\n\nexport const moveEquals = (left: Move, right: Move): boolean => {\n  if (left.to !== right.to) return false;\n  if (isDrop(left)) return isDrop(right) && left.role === right.role;\n  else return isNormal(right) && left.from === right.from && left.promotion === right.promotion;\n};\n\n/**\n * Converts a move to UCI notation, like `g1f3` for a normal move,\n * `a7a8q` for promotion to a queen, and `Q@f7` for a Crazyhouse drop.\n */\nexport const makeUci = (move: Move): string =>\n  isDrop(move)\n    ? `${roleToChar(move.role).toUpperCase()}@${makeSquare(move.to)}`\n    : makeSquare(move.from) + makeSquare(move.to) + (move.promotion ? roleToChar(move.promotion) : '');\n\nexport const kingCastlesTo = (color: Color, side: CastlingSide): Square =>\n  color === 'white' ? (side === 'a' ? 2 : 6) : side === 'a' ? 58 : 62;\n\nexport const rookCastlesTo = (color: Color, side: CastlingSide): Square =>\n  color === 'white' ? (side === 'a' ? 3 : 5) : side === 'a' ? 59 : 61;\n"],
  "mappings": "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",
  "names": []
}
