{
  "version": 3,
  "sources": ["../../../../node_modules/chessops/src/squareSet.ts"],
  "sourcesContent": ["import { Color, Square } from './types.js';\n\nconst popcnt32 = (n: number): number => {\n  n = n - ((n >>> 1) & 0x5555_5555);\n  n = (n & 0x3333_3333) + ((n >>> 2) & 0x3333_3333);\n  return Math.imul((n + (n >>> 4)) & 0x0f0f_0f0f, 0x0101_0101) >> 24;\n};\n\nconst bswap32 = (n: number): number => {\n  n = ((n >>> 8) & 0x00ff_00ff) | ((n & 0x00ff_00ff) << 8);\n  return ((n >>> 16) & 0xffff) | ((n & 0xffff) << 16);\n};\n\nconst rbit32 = (n: number): number => {\n  n = ((n >>> 1) & 0x5555_5555) | ((n & 0x5555_5555) << 1);\n  n = ((n >>> 2) & 0x3333_3333) | ((n & 0x3333_3333) << 2);\n  n = ((n >>> 4) & 0x0f0f_0f0f) | ((n & 0x0f0f_0f0f) << 4);\n  return bswap32(n);\n};\n\n/**\n * An immutable set of squares, implemented as a bitboard.\n */\nexport class SquareSet implements Iterable<Square> {\n  readonly lo: number;\n  readonly hi: number;\n\n  constructor(lo: number, hi: number) {\n    this.lo = lo | 0;\n    this.hi = hi | 0;\n  }\n\n  static fromSquare(square: Square): SquareSet {\n    return square >= 32 ? new SquareSet(0, 1 << (square - 32)) : new SquareSet(1 << square, 0);\n  }\n\n  static fromRank(rank: number): SquareSet {\n    return new SquareSet(0xff, 0).shl64(8 * rank);\n  }\n\n  static fromFile(file: number): SquareSet {\n    return new SquareSet(0x0101_0101 << file, 0x0101_0101 << file);\n  }\n\n  static empty(): SquareSet {\n    return new SquareSet(0, 0);\n  }\n\n  static full(): SquareSet {\n    return new SquareSet(0xffff_ffff, 0xffff_ffff);\n  }\n\n  static corners(): SquareSet {\n    return new SquareSet(0x81, 0x8100_0000);\n  }\n\n  static center(): SquareSet {\n    return new SquareSet(0x1800_0000, 0x18);\n  }\n\n  static backranks(): SquareSet {\n    return new SquareSet(0xff, 0xff00_0000);\n  }\n\n  static backrank(color: Color): SquareSet {\n    return color === 'white' ? new SquareSet(0xff, 0) : new SquareSet(0, 0xff00_0000);\n  }\n\n  static lightSquares(): SquareSet {\n    return new SquareSet(0x55aa_55aa, 0x55aa_55aa);\n  }\n\n  static darkSquares(): SquareSet {\n    return new SquareSet(0xaa55_aa55, 0xaa55_aa55);\n  }\n\n  complement(): SquareSet {\n    return new SquareSet(~this.lo, ~this.hi);\n  }\n\n  xor(other: SquareSet): SquareSet {\n    return new SquareSet(this.lo ^ other.lo, this.hi ^ other.hi);\n  }\n\n  union(other: SquareSet): SquareSet {\n    return new SquareSet(this.lo | other.lo, this.hi | other.hi);\n  }\n\n  intersect(other: SquareSet): SquareSet {\n    return new SquareSet(this.lo & other.lo, this.hi & other.hi);\n  }\n\n  diff(other: SquareSet): SquareSet {\n    return new SquareSet(this.lo & ~other.lo, this.hi & ~other.hi);\n  }\n\n  intersects(other: SquareSet): boolean {\n    return this.intersect(other).nonEmpty();\n  }\n\n  isDisjoint(other: SquareSet): boolean {\n    return this.intersect(other).isEmpty();\n  }\n\n  supersetOf(other: SquareSet): boolean {\n    return other.diff(this).isEmpty();\n  }\n\n  subsetOf(other: SquareSet): boolean {\n    return this.diff(other).isEmpty();\n  }\n\n  shr64(shift: number): SquareSet {\n    if (shift >= 64) return SquareSet.empty();\n    if (shift >= 32) return new SquareSet(this.hi >>> (shift - 32), 0);\n    if (shift > 0) return new SquareSet((this.lo >>> shift) ^ (this.hi << (32 - shift)), this.hi >>> shift);\n    return this;\n  }\n\n  shl64(shift: number): SquareSet {\n    if (shift >= 64) return SquareSet.empty();\n    if (shift >= 32) return new SquareSet(0, this.lo << (shift - 32));\n    if (shift > 0) return new SquareSet(this.lo << shift, (this.hi << shift) ^ (this.lo >>> (32 - shift)));\n    return this;\n  }\n\n  bswap64(): SquareSet {\n    return new SquareSet(bswap32(this.hi), bswap32(this.lo));\n  }\n\n  rbit64(): SquareSet {\n    return new SquareSet(rbit32(this.hi), rbit32(this.lo));\n  }\n\n  minus64(other: SquareSet): SquareSet {\n    const lo = this.lo - other.lo;\n    const c = ((lo & other.lo & 1) + (other.lo >>> 1) + (lo >>> 1)) >>> 31;\n    return new SquareSet(lo, this.hi - (other.hi + c));\n  }\n\n  equals(other: SquareSet): boolean {\n    return this.lo === other.lo && this.hi === other.hi;\n  }\n\n  size(): number {\n    return popcnt32(this.lo) + popcnt32(this.hi);\n  }\n\n  isEmpty(): boolean {\n    return this.lo === 0 && this.hi === 0;\n  }\n\n  nonEmpty(): boolean {\n    return this.lo !== 0 || this.hi !== 0;\n  }\n\n  has(square: Square): boolean {\n    return (square >= 32 ? this.hi & (1 << (square - 32)) : this.lo & (1 << square)) !== 0;\n  }\n\n  set(square: Square, on: boolean): SquareSet {\n    return on ? this.with(square) : this.without(square);\n  }\n\n  with(square: Square): SquareSet {\n    return square >= 32\n      ? new SquareSet(this.lo, this.hi | (1 << (square - 32)))\n      : new SquareSet(this.lo | (1 << square), this.hi);\n  }\n\n  without(square: Square): SquareSet {\n    return square >= 32\n      ? new SquareSet(this.lo, this.hi & ~(1 << (square - 32)))\n      : new SquareSet(this.lo & ~(1 << square), this.hi);\n  }\n\n  toggle(square: Square): SquareSet {\n    return square >= 32\n      ? new SquareSet(this.lo, this.hi ^ (1 << (square - 32)))\n      : new SquareSet(this.lo ^ (1 << square), this.hi);\n  }\n\n  last(): Square | undefined {\n    if (this.hi !== 0) return 63 - Math.clz32(this.hi);\n    if (this.lo !== 0) return 31 - Math.clz32(this.lo);\n    return;\n  }\n\n  first(): Square | undefined {\n    if (this.lo !== 0) return 31 - Math.clz32(this.lo & -this.lo);\n    if (this.hi !== 0) return 63 - Math.clz32(this.hi & -this.hi);\n    return;\n  }\n\n  withoutFirst(): SquareSet {\n    if (this.lo !== 0) return new SquareSet(this.lo & (this.lo - 1), this.hi);\n    return new SquareSet(0, this.hi & (this.hi - 1));\n  }\n\n  moreThanOne(): boolean {\n    return (this.hi !== 0 && this.lo !== 0) || (this.lo & (this.lo - 1)) !== 0 || (this.hi & (this.hi - 1)) !== 0;\n  }\n\n  singleSquare(): Square | undefined {\n    return this.moreThanOne() ? undefined : this.last();\n  }\n\n  *[Symbol.iterator](): Iterator<Square> {\n    let lo = this.lo;\n    let hi = this.hi;\n    while (lo !== 0) {\n      const idx = 31 - Math.clz32(lo & -lo);\n      lo ^= 1 << idx;\n      yield idx;\n    }\n    while (hi !== 0) {\n      const idx = 31 - Math.clz32(hi & -hi);\n      hi ^= 1 << idx;\n      yield 32 + idx;\n    }\n  }\n\n  *reversed(): Iterable<Square> {\n    let lo = this.lo;\n    let hi = this.hi;\n    while (hi !== 0) {\n      const idx = 31 - Math.clz32(hi);\n      hi ^= 1 << idx;\n      yield 32 + idx;\n    }\n    while (lo !== 0) {\n      const idx = 31 - Math.clz32(lo);\n      lo ^= 1 << idx;\n      yield idx;\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
