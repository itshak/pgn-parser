{
  "version": 3,
  "sources": ["../../../../node_modules/chessops/src/compat.ts"],
  "sourcesContent": ["/**\n * Compatibility with other libraries.\n *\n * Convert between the formats used by chessops,\n * [chessground](https://github.com/lichess-org/chessground),\n * and [scalachess](https://github.com/lichess-org/scalachess).\n *\n * @packageDocumentation\n */\n\nimport { Position } from './chess.js';\nimport { isDrop, Move, Rules, SquareName } from './types.js';\nimport { makeSquare, squareFile } from './util.js';\n\nexport interface ChessgroundDestsOpts {\n  chess960?: boolean;\n}\n\n/**\n * Computes the legal move destinations in the format used by chessground.\n *\n * Includes both possible representations of castling moves (unless\n * `chess960` mode is enabled), so that the `rookCastles` option will work\n * correctly.\n */\nexport const chessgroundDests = (pos: Position, opts?: ChessgroundDestsOpts): Map<SquareName, SquareName[]> => {\n  const result = new Map();\n  const ctx = pos.ctx();\n  for (const [from, squares] of pos.allDests(ctx)) {\n    if (squares.nonEmpty()) {\n      const d = Array.from(squares, makeSquare);\n      if (!opts?.chess960 && from === ctx.king && squareFile(from) === 4) {\n        // Chessground needs both types of castling dests and filters based on\n        // a rookCastles setting.\n        if (squares.has(0)) d.push('c1');\n        else if (squares.has(56)) d.push('c8');\n        if (squares.has(7)) d.push('g1');\n        else if (squares.has(63)) d.push('g8');\n      }\n      result.set(makeSquare(from), d);\n    }\n  }\n  return result;\n};\n\nexport const chessgroundMove = (move: Move): SquareName[] =>\n  isDrop(move) ? [makeSquare(move.to)] : [makeSquare(move.from), makeSquare(move.to)];\n\nexport const scalachessCharPair = (move: Move): string =>\n  isDrop(move)\n    ? String.fromCharCode(\n      35 + move.to,\n      35 + 64 + 8 * 5 + ['queen', 'rook', 'bishop', 'knight', 'pawn'].indexOf(move.role),\n    )\n    : String.fromCharCode(\n      35 + move.from,\n      move.promotion\n        ? 35 + 64 + 8 * ['queen', 'rook', 'bishop', 'knight', 'king'].indexOf(move.promotion) + squareFile(move.to)\n        : 35 + move.to,\n    );\n\nexport const lichessRules = (\n  variant:\n    | 'standard'\n    | 'chess960'\n    | 'antichess'\n    | 'fromPosition'\n    | 'kingOfTheHill'\n    | 'threeCheck'\n    | 'atomic'\n    | 'horde'\n    | 'racingKings'\n    | 'crazyhouse',\n): Rules => {\n  switch (variant) {\n    case 'standard':\n    case 'chess960':\n    case 'fromPosition':\n      return 'chess';\n    case 'threeCheck':\n      return '3check';\n    case 'kingOfTheHill':\n      return 'kingofthehill';\n    case 'racingKings':\n      return 'racingkings';\n    default:\n      return variant;\n  }\n};\n\nexport const lichessVariant = (\n  rules: Rules,\n): 'standard' | 'antichess' | 'kingOfTheHill' | 'threeCheck' | 'atomic' | 'horde' | 'racingKings' | 'crazyhouse' => {\n  switch (rules) {\n    case 'chess':\n      return 'standard';\n    case '3check':\n      return 'threeCheck';\n    case 'kingofthehill':\n      return 'kingOfTheHill';\n    case 'racingkings':\n      return 'racingKings';\n    default:\n      return rules;\n  }\n};\n"],
  "mappings": ";;;;;;;;;;AAAA;;;;;;;;AAyBO,IAAM,mBAAmB,CAAC,KAAe,SAA8D;AAC5G,QAAM,SAAS,oBAAI,IAAG;AACtB,QAAM,MAAM,IAAI,IAAG;AACnB,aAAW,CAAC,MAAM,OAAO,KAAK,IAAI,SAAS,GAAG,GAAG;AAC/C,QAAI,QAAQ,SAAQ,GAAI;AACtB,YAAM,IAAI,MAAM,KAAK,SAAS,UAAU;AACxC,UAAI,EAAC,SAAI,QAAJ,SAAI,SAAA,SAAJ,KAAM,aAAY,SAAS,IAAI,QAAQ,WAAW,IAAI,MAAM,GAAG;AAGlE,YAAI,QAAQ,IAAI,CAAC;AAAG,YAAE,KAAK,IAAI;iBACtB,QAAQ,IAAI,EAAE;AAAG,YAAE,KAAK,IAAI;AACrC,YAAI,QAAQ,IAAI,CAAC;AAAG,YAAE,KAAK,IAAI;iBACtB,QAAQ,IAAI,EAAE;AAAG,YAAE,KAAK,IAAI;MACvC;AACA,aAAO,IAAI,WAAW,IAAI,GAAG,CAAC;IAChC;EACF;AACA,SAAO;AACT;AAEO,IAAM,kBAAkB,CAAC,SAC9B,OAAO,IAAI,IAAI,CAAC,WAAW,KAAK,EAAE,CAAC,IAAI,CAAC,WAAW,KAAK,IAAI,GAAG,WAAW,KAAK,EAAE,CAAC;AAE7E,IAAM,qBAAqB,CAAC,SACjC,OAAO,IAAI,IACP,OAAO,aACP,KAAK,KAAK,IACV,KAAK,KAAK,IAAI,IAAI,CAAC,SAAS,QAAQ,UAAU,UAAU,MAAM,EAAE,QAAQ,KAAK,IAAI,CAAC,IAElF,OAAO,aACP,KAAK,KAAK,MACV,KAAK,YACD,KAAK,KAAK,IAAI,CAAC,SAAS,QAAQ,UAAU,UAAU,MAAM,EAAE,QAAQ,KAAK,SAAS,IAAI,WAAW,KAAK,EAAE,IACxG,KAAK,KAAK,EAAE;AAGf,IAAM,eAAe,CAC1B,YAWS;AACT,UAAQ,SAAS;IACf,KAAK;IACL,KAAK;IACL,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT;AACE,aAAO;EACX;AACF;AAEO,IAAM,iBAAiB,CAC5B,UACiH;AACjH,UAAQ,OAAO;IACb,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT,KAAK;AACH,aAAO;IACT;AACE,aAAO;EACX;AACF;",
  "names": []
}
